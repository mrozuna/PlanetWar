{
 "kind": "discovery#restDescription",
 "etag": "\"VkkzLg1qSf2dHM9_JADuPMcBnRo/Bau2tL48DzK5XKOJCqnT76JvlDk\"",
 "discoveryVersion": "v1",
 "id": "user:v1",
 "name": "user",
 "version": "v1",
 "description": "This is an API",
 "ownerDomain": "google.com",
 "ownerName": "Google",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rest",
 "baseUrl": "https://planetwarapi.appspot.com/_ah/api/user/v1/",
 "basePath": "/_ah/api/user/v1/",
 "rootUrl": "https://planetwarapi.appspot.com/_ah/api/",
 "servicePath": "user/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "schemas": {
  "CollectionResponse_MerchandiseUser": {
   "id": "CollectionResponse_MerchandiseUser",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "MerchandiseUser"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "CollectionResponse_UserApi": {
   "id": "CollectionResponse_UserApi",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "UserApi"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "MerchandisePurchased": {
   "id": "MerchandisePurchased",
   "type": "object",
   "properties": {
    "amout": {
     "type": "string",
     "format": "int64"
    },
    "id": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "MerchandiseUser": {
   "id": "MerchandiseUser",
   "type": "object",
   "properties": {
    "amout": {
     "type": "string",
     "format": "int64"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "idMerchandise": {
     "type": "string",
     "format": "int64"
    },
    "idUser": {
     "type": "string",
     "format": "int64"
    },
    "nomeMerchandise": {
     "type": "string"
    }
   }
  },
  "UserApi": {
   "id": "UserApi",
   "type": "object",
   "properties": {
    "email": {
     "type": "string"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "nameUser": {
     "type": "string"
    },
    "totalPoints": {
     "type": "string",
     "format": "int64"
    }
   }
  }
 },
 "methods": {
  "add": {
   "id": "user.add",
   "path": "add",
   "httpMethod": "POST",
   "request": {
    "$ref": "UserApi",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "UserApi"
   }
  },
  "getAllUser": {
   "id": "user.getAllUser",
   "path": "collectionresponse_userapi",
   "httpMethod": "GET",
   "response": {
    "$ref": "CollectionResponse_UserApi"
   }
  },
  "getData": {
   "id": "user.getData",
   "path": "userapi/{id}",
   "httpMethod": "GET",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "response": {
    "$ref": "UserApi"
   }
  },
  "updateData": {
   "id": "user.updateData",
   "path": "userapi",
   "httpMethod": "GET",
   "request": {
    "$ref": "UserApi",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "UserApi"
   }
  }
 },
 "resources": {
  "userController": {
   "methods": {
    "buyMerchandise": {
     "id": "user.userController.buyMerchandise",
     "path": "buyMerchandise/{idUser}",
     "httpMethod": "POST",
     "parameters": {
      "idUser": {
       "type": "string",
       "required": true,
       "format": "int64",
       "location": "path"
      }
     },
     "parameterOrder": [
      "idUser"
     ],
     "request": {
      "$ref": "MerchandisePurchased",
      "parameterName": "resource"
     },
     "response": {
      "$ref": "CollectionResponse_MerchandiseUser"
     }
    }
   }
  }
 }
}
